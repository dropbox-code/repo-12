name: Apply Security Patches
run-name: apply-patches-${{ inputs.dest_repo }}-${{ inputs.ref }}

on:
  workflow_dispatch:
    inputs:
      ref:
        required: true
        type: string
      dest_repo:
        required: true
        type: string
      patch_repo:
        required: true
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      dest_repo:
        required: true
        type: string
      patch_repo:
        required: true
        type: string

env:
  DEST_REPO: ${{ inputs.dest_repo }}
  PATCH_REPO: ${{ inputs.patch_repo }}
  REF: ${{ inputs.ref }}
  GIT_USER: "github-actions[bot]"
  GIT_USER_EMAIL: "github-actions[bot]@users.noreply.github.com"

jobs:
  apply-patches:
    runs-on: ubuntu-latest
    steps:
      - name: "Generate token"
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: ${{ secrets.GRAFANA_DELIVERY_BOT_APP_ID }}
          private_key: ${{ secrets.GRAFANA_DELIVERY_BOT_APP_PEM }}

      - name: "Checkout ${{ inputs.patch_repo }}"
        uses: actions/checkout@v3
        with: 
          repository: ${{ inputs.patch_repo }}
          path: patches 
          token: ${{ steps.generate_token.outputs.token }}

      - name: "Checkout ${{ inputs.dest_repo }}"
        uses: actions/checkout@v3
        with: 
          repository: ${{ inputs.dest_repo }}
          ref: ${{ inputs.ref }}
          path: dest
          token: ${{ steps.generate_token.outputs.token }}


      - name: "Apply patches to ${{ inputs.dest_repo}} ${{ inputs.ref }}"
        id: patches
        working-directory: dest
        run: |
          # Tell git who we are
          git config --local user.name ${GIT_USER}
          git config --local user.email ${GIT_USER_EMAIL}

          # Apply patches
          if [ -d "../patches/${REF}" ];
          then
            ls -lah ../patches/${REF}
            git am --committer-date-is-author-date ../patches/${REF}/*.patch
            # git am --committer-date-is-author-date -q ../patches/${REF}/*.patch
            git status
            echo git push origin ${REF}
            git push origin ${REF}
          else
            echo There are no patches for ${REF}
          fi

      - name: Handle patch failure
        if: ${{ failure() && steps.patches.conclusion == 'failure' }}
        run: echo "::error title='Failed to apply patches when mirroring'::The sync process was not able to apply active patches to the mirror. See the documentation here for how to resolve this error."

