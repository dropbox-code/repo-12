name: Mirror Branch to Security Mirror
run-name: mirror-branch-${{ inputs.src_repo }}-${{ inputs.ref }}

on:
  workflow_dispatch:
    inputs:
      ref:
        required: true
        type: string
      src_repo:
        required: true
        type: string
      dest_repo:
        required: true
        type: string
      patch_repo:
        required: true
        type: string
      patch_dir:
        required: false
        type: string
      # 3way is used to apply the patches using a 3way merge strategy (git am --3way). This will apply the patches in the event of a conflict
      # This should only be used when handling events where conflicts want to be seen.
      with_conflicts:
        required: false
        type: boolean
        default: false
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      src_repo:
        required: true
        type: string
      dest_repo:
        required: true
        type: string
      patch_repo:
        required: true
        type: string
      patch_dir:
        required: false
        type: string
      with_conflicts:
        required: false
        type: boolean
        default: false
env:
  SRC_REPO: ${{ inputs.src_repo }}
  DEST_REPO: ${{ inputs.dest_repo }}
  PATCH_REPO: ${{ inputs.patch_repo }}
  REF: ${{ inputs.ref }}
  GIT_USER: "github-actions[bot]"
  GIT_USER_EMAIL: "github-actions[bot]@users.noreply.github.com"

jobs:
  mirror-branch-and-apply-patches:
    runs-on: ubuntu-latest
    steps:
      - name: "Generate token"
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: ${{ secrets.GRAFANA_DELIVERY_BOT_APP_ID }}
          private_key: ${{ secrets.GRAFANA_DELIVERY_BOT_APP_PEM }}

      - name: "Checkout src repo"
        uses: actions/checkout@v3
        with: 
          repository: ${{ inputs.src_repo }}
          ref: ${{ inputs.ref }}
          path: src
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0

      - name: "Mirror src repo"
        id: mirror
        working-directory: src
        run: |
          # Tell git who we are
          git config --local user.name ${GIT_USER}
          git config --local user.email ${GIT_USER_EMAIL}

          # Add DEST_REPO as remote
          git remote add dest https://grafana-delivery-bot:${{ steps.generate_token.outputs.token }}@github.com/${DEST_REPO} > /dev/null 2>&1
          
          # Fetch ${DEST_REPO}/${REF}, if it doesn't exist then create it
          git fetch dest ${REF} > /dev/null 2>&1 || echo "" > /dev/null 2>&1
          git push dest "refs/remotes/origin/${REF}:refs/heads/${REF}" --force-with-lease > /dev/null 2>&1
          echo Branch mirrored.

      - name: "Checkout patch repo"
        uses: actions/checkout@v3
        with: 
          repository: ${{ inputs.patch_repo }}
          path: patches 
          token: ${{ steps.generate_token.outputs.token }}

      - name: "Checkout dest repo"
        uses: actions/checkout@v3
        with: 
          repository: ${{ inputs.dest_repo }}
          ref: ${{ inputs.ref }}
          path: dest 
          token: ${{ steps.generate_token.outputs.token }}

      - name: "Apply patches"
        id: patches
        working-directory: dest 
        run: |
          PATCH_DIR_INPUT=${{ inputs.patch_dir }}
          DIR="${PATCH_DIR_INPUT:-$REF}"
          # Tell git who we are
          git config --local user.name ${GIT_USER}
          git config --local user.email ${GIT_USER_EMAIL}

          # Apply patches
          if [ -d "../patches/${DIR}" ];
          then
            git am $(if [ ${{ inputs.with_conflicts }} ]; then echo '--3way'; fi) --ignore-whitespace --ignore-space-change --committer-date-is-author-date -q ../patches/${DIR}/*.patch
            git push origin ${REF} > /dev/null 2>&1
          fi

          echo Patches applied.

      - name: Handle patch failure
        if: ${{ failure() && steps.patches.conclusion == 'failure' }}
        run: echo "::error title='Failed to apply patches when mirroring'::The sync process was not able to apply active patches to the mirror. See the documentation here for how to resolve this error."

      
