name: Test Patches
run-name: test-patches-${{ inputs.src_repo }}-${{ inputs.ref }}

on:
  workflow_dispatch:
    inputs:
      src_ref:
        required: true
        type: string
      src_repo:
        required: true
        type: string
      patch_ref:
        required: true
        type: string
      patch_repo:
        required: true
        type: string
  workflow_call:
    inputs:
      src_ref:
        required: true
        type: string
      src_repo:
        required: true
        type: string
      patch_ref:
        required: true
        type: string
      patch_repo:
        required: true
        type: string

env:
  SRC_REPO: ${{ inputs.src_repo }}
  PATCH_REPO: ${{ inputs.patch_repo }}
  SRC_REF: ${{ inputs.src_ref }}
  PATCH_REF: ${{ inputs.patch_ref }}
  GIT_USER: "github-actions[bot]"
  GIT_USER_EMAIL: "github-actions[bot]@users.noreply.github.com"

jobs:
  test-patches:
    runs-on: ubuntu-latest
    steps:
      - name: "Generate token"
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: ${{ secrets.GRAFANA_DELIVERY_BOT_APP_ID }}
          private_key: ${{ secrets.GRAFANA_DELIVERY_BOT_APP_PEM }}

      # Everything in the patch repo lives in main, patch_ref is the folder to use
      - name: "Checkout ${{ inputs.patch_repo }} main"
        uses: actions/checkout@v3
        with: 
          repository: ${{ inputs.patch_repo }}
          path: patches 
          token: ${{ steps.generate_token.outputs.token }}

      - name: "Checkout ${{ inputs.src_repo }} ${{ inputs.src_ref }}"
        uses: actions/checkout@v3
        with: 
          repository: ${{ inputs.src_repo }}
          ref: ${{ inputs.src_ref }}
          path: src
          token: ${{ steps.generate_token.outputs.token }}

      - name: "Test apply patches for ${{ inputs.patch_ref }} to ${{ inputs.src_ref }}"
        id: patches
        working-directory: src
        run: |
          # Tell git who we are
          git config --local user.name ${GIT_USER}
          git config --local user.email ${GIT_USER_EMAIL}

          # Apply patches
          if [ -d "../patches/${PATCH_REF}" ];
          then
            ls -lah ../patches/${PATCH_REF}
            git am --committer-date-is-author-date ../patches/${PATCH_REF}/*.patch
            # git am --committer-date-is-author-date -q ../patches/${PATCH_REF}/*.patch
          else
            echo There are no patches for ${PATCH_REF}
          fi
          git log

      - name: Handle patch failure
        if: ${{ failure() && steps.patches.conclusion == 'failure' }}
        run: echo "::error title='Failed to apply patches when mirroring'::The sync process was not able to apply active patches to the mirror. See the documentation here for how to resolve this error."

